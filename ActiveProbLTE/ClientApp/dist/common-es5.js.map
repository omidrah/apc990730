{"version":3,"sources":["webpack:///./src/app/Authority/loginguard.ts","webpack:///./src/app/Shared/services/NgbDatepickerI18nPersian.ts"],"names":[],"mappings":"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","file":"common-es5.js","sourcesContent":["import { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { Injectable, Inject, OnDestroy } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthenticationService } from '../Shared/services/authentication.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginGruard implements CanActivate, OnDestroy {\r\n  myAppUrl = '';\r\n  private logSubc: Subscription;\r\n  islogged: boolean;\r\n  constructor(\r\n    private router: Router,\r\n    private toast: ToastrService,\r\n    private auth: AuthenticationService,\r\n    private translate: TranslateService,\r\n    @Inject('BASE_URL') baseUrl: string) {\r\n    this.myAppUrl = baseUrl;\r\n  }\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n\r\n    this.logSubc = this.auth.currentUser.subscribe((data) => { data ? this.islogged = true : this.islogged = false });\r\n    if (this.islogged) {\r\n      //this.router.navigateByUrl(state.url);         \r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['login'], { queryParams: { returnURL: route.url } });\r\n    this.toast.error(this.translate.instant('NoAccessToThisPage'), this.translate.instant('Warning'));\r\n    return false;\r\n  }\r\n  ngOnDestroy() {\r\n    this.logSubc.unsubscribe();\r\n  }\r\n}\r\n","import {Component, Injectable} from '@angular/core';\r\nimport {NgbDateStruct, NgbCalendar, NgbDatepickerI18n, NgbCalendarPersian} from '@ng-bootstrap/ng-bootstrap';\r\nconst WEEKDAYS_SHORT = ['د', 'س', 'چ', 'پ', 'ج', 'ش', 'ی'];\r\nconst MONTHS = ['فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'];\r\n@Injectable()\r\nexport class NgbDatepickerI18nPersian extends NgbDatepickerI18n {\r\n  getWeekdayShortName(weekday: number) { return WEEKDAYS_SHORT[weekday - 1]; }\r\n  getMonthShortName(month: number) { return MONTHS[month - 1]; }\r\n  getMonthFullName(month: number) { return MONTHS[month - 1]; }\r\n  getDayAriaLabel(date: NgbDateStruct): string { return `${date.year}-${this.getMonthFullName(date.month)}-${date.day}`; }\r\n}\r\n"],"sourceRoot":""}