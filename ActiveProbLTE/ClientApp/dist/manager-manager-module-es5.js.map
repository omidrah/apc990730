{"version":3,"sources":["webpack:///./src/app/manager/role-access/role-access.component.html","webpack:///./src/app/manager/role-manager/role-manager.component.html","webpack:///./src/app/manager/roleedit/roleedit.component.html","webpack:///./src/app/manager/user-change-pass/user-change-pass.component.html","webpack:///./src/app/manager/user-manager/user-manager.component.html","webpack:///./src/app/manager/user-roles/user-roles.component.html","webpack:///./src/app/manager/useredit/useredit.component.html","webpack:///./node_modules/rxjs/internal/operators/map.js","webpack:///./src/app/Shared/services/manager.service.ts","webpack:///./src/app/manager/manager-routing.module.ts","webpack:///./src/app/manager/manager.module.ts","webpack:///./src/app/manager/role-access/role-access.component.css","webpack:///./src/app/manager/role-access/role-access.component.ts","webpack:///./src/app/manager/role-manager/role-manager.component.css","webpack:///./src/app/manager/role-manager/role-manager.component.ts","webpack:///./src/app/manager/roleedit/roleedit.component.css","webpack:///./src/app/manager/roleedit/roleedit.component.ts","webpack:///./src/app/manager/user-change-pass/user-change-pass.component.css","webpack:///./src/app/manager/user-change-pass/user-change-pass.component.ts","webpack:///./src/app/manager/user-manager/user-manager.component.css","webpack:///./src/app/manager/user-manager/user-manager.component.ts","webpack:///./src/app/manager/user-roles/user-roles.component.css","webpack:///./src/app/manager/user-roles/user-roles.component.ts","webpack:///./src/app/manager/useredit/useredit.component.css","webpack:///./src/app/manager/useredit/useredit.component.ts"],"names":[],"mappings":"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","file":"manager-manager-module-es5.js","sourcesContent":["module.exports = \"<!-- Content Wrapper. Contains page content -->\\n<div class=\\\"content-wrapper\\\">\\n  <!-- Content Header (Page header) -->\\n  <section class=\\\"content-header\\\">\\n    <h1>\\n      <h2>تنظیم سطوح دسترسی پویای نقش {{selectedRoleName}}</h2>\\n    </h1>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li><a [routerLink]=\\\"['']\\\" translate><i class=\\\"fa fa-dashboard\\\"></i>Home</a></li>\\n      <li class=\\\"active\\\" translate>RoleList</li>\\n    </ol>\\n\\n  </section>\\n\\n  <!--<app-breadcrumb></app-breadcrumb>-->\\n  <!-- Main content -->\\n  <section class=\\\"content\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box box-primary\\\">\\n          <div class=\\\"box-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-form-field>\\n                  <mat-label translate>Search</mat-label>\\n                  <input matInput #input [(ngModel)]=\\\"search\\\">\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <form [formGroup]=\\\"AccessForm\\\" (ngSubmit)=\\\"submit()\\\">\\n              <ul *ngFor=\\\"let d of actsFormArray.controls; let i=index\\\">\\n                <input type=\\\"checkbox\\\" [value]=\\\"d.value.controllerId\\\" /> {{d.value.disp}}\\n                <li *ngFor=\\\"let data of d.value.actions; let j=index\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" [value]=\\\"data.actionId\\\" checked=\\\"{{data.selected}}\\\" (change)=\\\"onCheckboxChange($event)\\\" />\\n                    {{data.actionName}}\\n                  </label>\\n                </li>\\n              </ul>\\n              <button class=\\\"btn btn-primary\\\" translate>submit</button>\\n              <button class=\\\"btn btn-danger \\\" (click)=\\\"cancel()\\\" translate>Cancel</button>\\n            </form>\\n          </div><!-- /.box-body -->\\n          <div class=\\\"overlay\\\" *ngIf=\\\"showloader \\\">\\n            <i class=\\\"fa fa-refresh fa-spin\\\"></i>\\n          </div>\\n        </div><!-- /.box -->\\n      </div><!-- /.col -->\\n    </div><!-- /.row -->\\n\\n  </section><!-- /.content -->\\n</div><!-- /.content-wrapper -->\\n\"","module.exports = \"<!-- Content Wrapper. Contains page content -->\\n<div class=\\\"content-wrapper\\\">\\n  <!-- Content Header (Page header) -->\\n  <section class=\\\"content-header\\\">\\n    <h1>\\n      <span translate>RoleList</span>\\n    </h1>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li><a [routerLink]=\\\"['']\\\" translate><i class=\\\"fa fa-dashboard\\\"></i>Home</a></li>\\n      <li class=\\\"active\\\" translate>RoleList</li>\\n    </ol>\\n\\n  </section>\\n\\n  <!--<app-breadcrumb></app-breadcrumb>-->\\n  <!-- Main content -->\\n  <section class=\\\"content\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box box-primary\\\">\\n          <div class=\\\"box-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-form-field>\\n                  <mat-label translate>Search</mat-label>\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" #input>\\n                </mat-form-field>\\n                <a class=\\\"btn btn-success btn-lg rowEndAligne\\\" [routerLink]=\\\"['/manager/Roles/Create']\\\" ><span translate>Add Role</span><i class=\\\"fa fa-plus\\\"></i></a>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"mat-table-container mat-elevation-z8\\\">\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort #sort1=\\\"matSort\\\"  class=\\\"table table-hover table-striped text-nowrap\\\" >\\n\\n\\n                <ng-container matColumnDef=\\\"index\\\">\\n                  <th mat-header-cell *matHeaderCellDef><span translate>Row</span></th>\\n                  <td mat-cell *matCellDef=\\\"let element;let i = index;\\\">\\n                    {{this.paginator.pageIndex == 0 ? i + 1 : 1 + i + this.paginator.pageIndex * this.paginator.pageSize}}\\n                  </td>\\n                </ng-container>\\n\\n\\n                <ng-container matColumnDef=\\\"name\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header><span translate>Name</span></th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.role.name}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"description\\\">\\n                  <th mat-header-cell *matHeaderCellDef><span translate>description</span></th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.role.description}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"UserCount\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header><span translate>UsersCount</span></th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.usersCount}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"actions\\\" sticky [stickyEnd]=\\\"true\\\">\\n                  <th mat-header-cell *matHeaderCellDef></th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a class=\\\"btn btn-default gridbutton\\\" [routerLink]=\\\"['/manager/Roles/Edit/' , element.role.id]\\\" title=\\\"{{ 'Edit' | translate }}\\\">Edit<i class=\\\"fa fa-edit\\\"></i></a>\\n                    <a class=\\\"btn btn-default gridbutton\\\" (click)=\\\"doDelete(element.role)\\\" title=\\\"{{ 'Delete' | translate }}\\\"><i class=\\\"fa fa-trash\\\">Delete</i></a>\\n                    <a class=\\\"btn btn-default gridbutton\\\" [routerLink]=\\\"['/manager/Roles/Access/' , element.role.id ]\\\" title=\\\"{{ 'Access Controle' | translate }}\\\">AccessControl<i class=\\\"fa fa-upload\\\"></i></a>\\n                  </td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n              </table>\\n              <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10 , 25 , 50 , 100]\\\" [showFirstLastButtons]=\\\"true\\\"></mat-paginator>\\n            </div>\\n          </div><!-- /.box-body -->\\n          <div class=\\\"overlay\\\" *ngIf=\\\"showloader \\\">\\n            <i class=\\\"fa fa-refresh fa-spin\\\"></i>\\n          </div>\\n        </div><!-- /.box -->\\n      </div><!-- /.col -->\\n    </div><!-- /.row -->\\n\\n\\n    <div class=\\\"modal fade\\\" id=\\\"modal-default\\\" data-backdrop=\\\"static\\\" style=\\\"display: none;\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">×</span>\\n            </button>\\n            <h4 class=\\\"modal-title\\\" translate>Noticeable</h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <p translate>DeleteDeviceConfirmMessage</p>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default pull-left\\\" data-dismiss=\\\"modal\\\" translate>No</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"doDelete()\\\" translate>Yse</button>\\n          </div>\\n        </div>\\n        <!-- /.modal-content -->\\n      </div>\\n      <!-- /.modal-dialog -->\\n    </div>\\n\\n\\n\\n  </section><!-- /.content -->\\n</div><!-- /.content-wrapper -->\\n\"","module.exports = \"<p>roleedit works!</p>\\n<div class=\\\"box box-primary\\\">\\n  <form [formGroup]=\\\"roleForm\\\" (ngSubmit)=\\\"Save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n    <div class=\\\"box-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3 control-label\\\" for=\\\"name\\\">\\n              <span class=\\\"text-danger\\\">*</span>\\n              <span >Name</span>\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"name\\\" required />\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"name?.invalid && (name?.touched || formDir.submitted)\\\">Name Is Required</span  >\\n            </div>\\n          </div>\\n        </div>\\n        </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\" class=\\\"col-sm-3 control-label\\\">\\n              <span>Description</span>:\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"description\\\" />\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"box-footer\\\">\\n      <button class=\\\"btn btn-danger  rowEndAligne\\\" (click)=\\\"cancel()\\\" translate>Cancel</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary  rowEndAligne\\\" translate>Save</button>\\n    </div><!-- /.box-footer -->\\n  </form>\\n</div>\\n\"","module.exports = \"\\n<div class=\\\"box box-primary\\\">\\n  <form [formGroup]=\\\"passChangeForm\\\" (ngSubmit)=\\\"Save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n    <div class=\\\"box-body  justify-content-center\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"newPassword\\\" class=\\\"col-sm-3 control-label\\\">\\n              <span class=\\\"text-danger\\\">*</span>\\n              <span translate>New Password</span>:\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"newPassword\\\" required>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newPassword?.invalid && ( newPassword.touched || formDir.submitted)\\\" translate>newPasswordIsRequired</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"confirmPassword\\\" class=\\\"col-sm-3 control-label\\\">\\n              <span class=\\\"text-danger\\\">* </span>\\n              <span translate>ConfirmPassword</span>:\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" required>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"confirmPassword?.invalid && ( confirmPassword.touched || formDir.submitted)\\\" translate>ConfirmPasswordIsRequired</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"box-footer\\\">\\n      <button class=\\\"btn btn-danger  rowEndAligne\\\" (click)=\\\"cancel()\\\" translate>Cancel</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary  rowEndAligne\\\" translate>Save</button>\\n    </div><!-- /.box-footer -->\\n  </form>\\n</div>\\n\"","module.exports = \"<!-- Content Wrapper. Contains page content -->\\n<div class=\\\"content-wrapper\\\">\\n  <!-- Content Header (Page header) -->\\n  <section class=\\\"content-header\\\">\\n    <h1>\\n      <span translate>UserList</span>\\n    </h1>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li><a [routerLink]=\\\"['']\\\" translate><i class=\\\"fa fa-dashboard\\\"></i>Home</a></li>\\n      <li class=\\\"active\\\" translate>UserList</li>\\n    </ol>\\n\\n  </section>\\n\\n  <!--<app-breadcrumb></app-breadcrumb>-->\\n  <!-- Main content -->\\n  <section class=\\\"content\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box box-primary\\\">\\n          <div class=\\\"box-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <mat-form-field>\\n                  <mat-label translate>Search</mat-label>\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" #input>\\n                </mat-form-field>\\n                <a class=\\\"btn btn-success btn-lg rowEndAligne\\\" [routerLink]=\\\"['/manager/Users/Create']\\\"><span translate>Add User</span><i class=\\\"fa fa-plus\\\"></i></a>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"mat-table-container mat-elevation-z8\\\">\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort #sort1=\\\"matSort\\\" class=\\\"table table-hover table-striped text-nowrap\\\">\\n\\n\\n                <ng-container matColumnDef=\\\"index\\\">\\n                  <th mat-header-cell *matHeaderCellDef><span translate>Row</span></th>\\n                  <td mat-cell *matCellDef=\\\"let element;let i = index;\\\">\\n                    {{this.paginator.pageIndex == 0 ? i + 1 : 1 + i + this.paginator.pageIndex * this.paginator.pageSize}}\\n                  </td>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"FirstName\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header><span translate>FirstName</span></th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"LastName\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header><span translate>LastName</span></th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\n                </ng-container>\\n                \\n                <ng-container matColumnDef=\\\"IsActive\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header><span translate>IsActive</span></th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.isActive}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"actions\\\" sticky [stickyEnd]=\\\"true\\\">\\n                  <th mat-header-cell *matHeaderCellDef></th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <a class=\\\"btn btn-default gridbutton\\\" [routerLink]=\\\"['/manager/Users/Edit/' , element.id]\\\" title=\\\"{{ 'Edit' | translate }}\\\">Edit<i class=\\\"fa fa-edit\\\"></i></a>\\n                    <a class=\\\"btn btn-default gridbutton\\\" [routerLink]=\\\"['/manager/Users/ChangePassword/' , element.id]\\\" title=\\\"{{ 'Change Password' | translate }}\\\">Change Password<i class=\\\"fa fa-edit\\\"></i></a>\\n                    <a class=\\\"btn btn-default gridbutton\\\" (click)=\\\"doDelete(element)\\\" title=\\\"{{ 'Delete' | translate }}\\\"><i class=\\\"fa fa-trash\\\">Delete</i></a>\\n                    <a class=\\\"btn btn-default gridbutton\\\" [routerLink]=\\\"['/manager/Users/AsginRole/' , element.id ]\\\" title=\\\"{{ 'Asgin Role' | translate }}\\\">Role<i class=\\\"fa fa-upload\\\"></i></a>\\n                  </td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n              </table>\\n              <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10 , 25 , 50 , 100]\\\" [showFirstLastButtons]=\\\"true\\\"></mat-paginator>\\n            </div>\\n          </div><!-- /.box-body -->\\n          <div class=\\\"overlay\\\" *ngIf=\\\"showloader \\\">\\n            <i class=\\\"fa fa-refresh fa-spin\\\"></i>\\n          </div>\\n        </div><!-- /.box -->\\n      </div><!-- /.col -->\\n    </div><!-- /.row -->\\n\\n\\n    <div class=\\\"modal fade\\\" id=\\\"modal-default\\\" data-backdrop=\\\"static\\\" style=\\\"display: none;\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">×</span>\\n            </button>\\n            <h4 class=\\\"modal-title\\\" translate>Noticeable</h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <p translate>DeleteDeviceConfirmMessage</p>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default pull-left\\\" data-dismiss=\\\"modal\\\" translate>No</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"doDelete()\\\" translate>Yse</button>\\n          </div>\\n        </div>\\n        <!-- /.modal-content -->\\n      </div>\\n      <!-- /.modal-dialog -->\\n    </div>\\n\\n\\n\\n  </section><!-- /.content -->\\n</div><!-- /.content-wrapper -->\\n\"","module.exports = \"<!-- Content Wrapper. Contains page content -->\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <!-- Content Header (Page header) -->\\r\\n  <section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n      <h2>تنظیم نقش کاربر </h2>\\r\\n    </h1>\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a [routerLink]=\\\"['']\\\" translate><i class=\\\"fa fa-dashboard\\\"></i>Home</a></li>\\r\\n      <li class=\\\"active\\\" translate>نقش کاربری</li>\\r\\n    </ol>\\r\\n  </section>\\r\\n  <!--<app-breadcrumb></app-breadcrumb>-->\\r\\n  <!-- Main content -->\\r\\n  <section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <div class=\\\"box box-primary\\\">\\r\\n          <div class=\\\"box-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-label translate>Search</mat-label>\\r\\n                  <input matInput #input [(ngModel)]=\\\"search\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n            <form [formGroup]=\\\"asignRoleForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n              <ul>\\r\\n                <li *ngFor=\\\"let d of rlsFormArray.controls; let i=index\\\">\\r\\n                  <label>\\r\\n                    <input type=\\\"checkbox\\\" [value]=\\\"d.value.id\\\" \\r\\n                           checked=\\\"{{d.value.selected==true?'checked':''}}\\\"\\r\\n                           (change)=\\\"onCheckboxChange($event)\\\" /> {{d.value.title}}\\r\\n                  </label>\\r\\n                </li>\\r\\n              </ul>\\r\\n              <button class=\\\"btn btn-primary\\\" translate>submit</button>\\r\\n              <button class=\\\"btn btn-danger \\\" (click)=\\\"cancel()\\\" translate>Cancel</button>\\r\\n            </form>\\r\\n          </div><!-- /.box-body -->\\r\\n          <div class=\\\"overlay\\\" *ngIf=\\\"showloader \\\">\\r\\n            <i class=\\\"fa fa-refresh fa-spin\\\"></i>\\r\\n          </div>\\r\\n        </div><!-- /.box -->\\r\\n      </div><!-- /.col -->\\r\\n    </div><!-- /.row -->\\r\\n  </section><!-- /.content -->\\r\\n</div><!-- /.content-wrapper -->\\r\\n\"","module.exports = \"<p>roleedit works!</p>\\n<div class=\\\"box box-primary\\\">\\n  <form [formGroup]=\\\"usrForm\\\" (ngSubmit)=\\\"Save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n    <div class=\\\"box-body \\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"firstName\\\" class=\\\"col-sm-3 control-label\\\">\\n              <span class=\\\"text-danger\\\">*</span>\\n              <span translate>FirstName</span>:\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" required>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"firstName?.invalid && ( firstName.touched || formDir.submitted)\\\" translate>FirstNameIsRequired</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lastName\\\" class=\\\"col-sm-3 control-label\\\">\\n              <span class=\\\"text-danger\\\">* </span>\\n              <span translate>LastName</span>:\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" required>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"lastName?.invalid && ( lastName.touched || formDir.submitted)\\\" translate>LastNameIsRequired</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"userName\\\" class=\\\"col-sm-3 control-label\\\">\\n              <span class=\\\"text-danger\\\">*</span>\\n              <span translate>UserName</span>:\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"userName\\\" required>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"userName?.invalid && ( userName.touched || formDir.submitted)\\\" translate>userNameIsRequired</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-3 control-label\\\">\\n              <span class=\\\"text-danger\\\">*</span>\\n              <span translate>Email</span>:\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" required>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"email?.invalid && ( email.touched || formDir.submitted)\\\" translate>emailIsRequired</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" [hidden]=\\\"formTitle=='Edit'\\\">\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"pasword\\\" class=\\\"col-sm-3 control-label\\\">\\n              <span class=\\\"text-danger\\\">*</span>\\n              <span translate>Password</span>:\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"password\\\" required>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"password?.invalid && ( password.touched || formDir.submitted)\\\" translate>passwordIsRequired</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"confirmPassword\\\" class=\\\"col-sm-3 control-label\\\">\\n              <span class=\\\"text-danger\\\">*</span>\\n              <span translate>ConfirmPassword</span>:\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"confirmPassword\\\" required>\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"confirmPassword?.invalid && ( confirmPassword.touched || formDir.submitted)\\\" translate>confirmPasswordIsRequired</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"box-footer\\\">\\n      <button class=\\\"btn btn-danger  rowEndAligne\\\" (click)=\\\"cancel()\\\" translate>Cancel</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary  rowEndAligne\\\" translate>Save</button>\\n    </div><!-- /.box-footer -->\\n  </form>\\n</div>\\n\"","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map","import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { RoleAndUsersCount } from './../interfaces/RoleAndUsersCount';\r\nimport { IRole } from '../interfaces/IRole';\r\nimport { IUser } from '../interfaces/IUser';\r\nimport { IPass } from '../interfaces/IPass';\r\n\r\n@Injectable()\r\nexport class ManagerService {\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getUsers() {\r\n    return this._http.get('api/UsersManager/Index');\r\n  }\r\n  AddUser(newUser: IUser) {\r\n    return this._http.post<IUser>('api/UsersManager/Register', newUser);\r\n  }\r\n  getUserById(id: number) {\r\n    return this._http.get('api/UsersManager/GetUserById/' + id);\r\n  }\r\n  UpdateUser(updateUser: IUser) {\r\n    var body = {\r\n      firstName: updateUser.firstName,\r\n      lastName: updateUser.lastName,\r\n      id: updateUser.id,\r\n      email: updateUser.email,\r\n      userName: updateUser.userName\r\n    };\r\n    return this._http.put('api/UsersManager/Edit/', body);\r\n  }\r\n  UpdatePassword(newpass: any) {\r\n    return this._http.post('api/UsersManager/ChangePassword', newpass);\r\n  }\r\n  GetRoleAsignToUser(id: number) {\r\n    return this._http.get('api/UsersManager/userRoles/' + id);\r\n  }\r\n  UpdateUserRole(userId: number, rolesId: number[]) {\r\n    return this._http.put('api/UsersManager/ChangeUserRoles/' + userId, rolesId);\r\n  }\r\n  /************ */\r\n  getRole(): Observable<RoleAndUsersCount[]> {\r\n    return this._http.get<RoleAndUsersCount[]>('api/RoleManager/Index').pipe(\r\n      tap(_ => console.log(\"list of roles\"))\r\n    );\r\n  }\r\n  getRoleById(id: number) {\r\n    return this._http.get<IRole>(\"api/RoleManager/GetRoleById/\" + id);\r\n  }\r\n  getAccess(roleId: number) {\r\n    return this._http.get('api/RoleManager/AccessControl?id=' + roleId);\r\n  }\r\n  updateRoleAccess(roleId: number, actions: string[]) {\r\n    return this._http.post('api/RoleManager/UpdateAccess/' + roleId,\r\n      actions);\r\n  }\r\n  AddRole(newRole: IRole) {\r\n    return this._http.post('api/RoleManager/Create', newRole);\r\n  }\r\n  UpdateRole(newRole: IRole) {\r\n    return this._http.post('api/RoleManager/Edit', newRole);\r\n  }\r\n  DeleteRole(id:number) {        \r\n    return this._http.delete('api/RoleManager/Delete/'+id);\r\n  }\r\n}\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RoleAccessComponent } from './role-access/role-access.component';\r\nimport { RoleManagerComponent } from './role-manager/role-manager.component';\r\nimport { UserManagerComponent } from './user-manager/user-manager.component';\r\nimport { RoleeditComponent } from './roleedit/roleedit.component';\r\nimport { UsereditComponent } from './useredit/useredit.component';\r\nimport { UserChangePassComponent } from './user-change-pass/user-change-pass.component';\r\nimport { UserRolesComponent } from './user-roles/user-roles.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  children: [\r\n    { path: '', component: UserManagerComponent },\r\n    { path: 'Users/Create', component: UsereditComponent },\r\n    { path: 'Users/Edit/:id', component: UsereditComponent },\r\n    { path: 'Users/ChangePassword/:id', component: UserChangePassComponent },\r\n    { path: 'Users/AsginRole/:id', component: UserRolesComponent },\r\n    { path: 'Roles', component: RoleManagerComponent },\r\n    { path: 'Roles/Create', component: RoleeditComponent },\r\n    { path: 'Roles/Edit/:id', component: RoleeditComponent },\r\n    { path: 'Roles/Access/:id', component: RoleAccessComponent }\r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ManagerRoutingModule { }\r\n","import { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { sharedModule } from './../Shared/shared.modules';\nimport { ManagerService } from './../Shared/services/manager.service';\n\nimport { ManagerRoutingModule } from './manager-routing.module';\n\nimport { RoleManagerComponent } from './role-manager/role-manager.component';\nimport { UserManagerComponent } from './user-manager/user-manager.component';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { RoleAccessComponent } from './role-access/role-access.component';\nimport { RoleeditComponent } from './roleedit/roleedit.component';\nimport { UsereditComponent } from './useredit/useredit.component';\nimport { UserChangePassComponent } from './user-change-pass/user-change-pass.component';\nimport { UserRolesComponent } from './user-roles/user-roles.component';\n\n@NgModule({\n  declarations: [RoleManagerComponent, UserManagerComponent, RoleAccessComponent, RoleeditComponent, UsereditComponent, UserChangePassComponent, UserRolesComponent],\n  imports: [\n    CommonModule,\n    sharedModule,\n    ManagerRoutingModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatFormFieldModule\n  ]\n})\nexport class ManagerModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZXIvcm9sZS1hY2Nlc3Mvcm9sZS1hY2Nlc3MuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ManagerService } from 'src/app/Shared/services/manager.service';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { element } from 'protractor';\r\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-role-access',\r\n  templateUrl: './role-access.component.html',\r\n  styleUrls: ['./role-access.component.css'],\r\n  providers: [ManagerService]\r\n})\r\nexport class RoleAccessComponent implements OnInit {\r\n\r\n  AccessForm: FormGroup;\r\n  checkedArray: FormArray = new FormArray([]);\r\n  access;\r\n  controllers = [];\r\n  selectedRoleId: number;\r\n  selectedRoleName: '';\r\n  constructor(\r\n    private _avRoute: ActivatedRoute,\r\n    private _manager: ManagerService,\r\n    private _router: Router,\r\n    private _fb: FormBuilder) {\r\n    if (this._avRoute.snapshot.params['id']) {\r\n      this.selectedRoleId = this._avRoute.snapshot.params['id'];\r\n    }\r\n    this.AccessForm = this._fb.group({\r\n      acts: new FormArray([])\r\n    });\r\n    this.DynamicCtrl();\r\n\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  private DynamicCtrl() {\r\n    this._manager.getAccess(this.selectedRoleId).pipe(\r\n      map(data => {\r\n        for (let k in data[\"securedControllerActions\"]) {\r\n          let curActions = data[\"securedControllerActions\"][k][\"mvcActions\"];\r\n          let act = [];\r\n          for (let j in curActions) {\r\n            if (curActions[j][\"actionDisplayName\"] != null && curActions[j][\"actionDisplayName\"] != \"\") {\r\n              var claims = data[\"roleIncludeRoleClaims\"].claims;\r\n              let iSselected = false;\r\n              claims.forEach((tmp, key) => {\r\n                if (tmp[\"claimType\"] == \"dynKkomAuthorizationClaimType\" &&\r\n                  tmp[\"claimValue\"] == curActions[j][\"actionId\"])\r\n                  iSselected = true;\r\n              })             \r\n              act.push({ actionName: curActions[j][\"actionDisplayName\"], actionId: curActions[j][\"actionId\"], selected: iSselected ? \"Checked\" : \"\" });\r\n            }\r\n          }\r\n          var ctr = {\r\n            disp: data[\"securedControllerActions\"][k][\"controllerDisplayName\"],\r\n            controllerId: data[\"securedControllerActions\"][k][\"controllerName\"],\r\n            actions: act\r\n          };\r\n          this.controllers.push(ctr);\r\n        }\r\n        return data;\r\n      }))\r\n      .subscribe(poco => {\r\n        this.access = poco;\r\n        //console.log(this.access);\r\n        this.selectedRoleName = this.access.roleIncludeRoleClaims.name;\r\n        this.addCheckboxes();\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    var dd: string[] = [];\r\n    this.checkedArray.controls.forEach((key, value) => {\r\n      //alert(key.value);\r\n      dd.push(key.value);\r\n    });\r\n    this._manager.updateRoleAccess(+this.selectedRoleId, dd).subscribe(data => {\r\n      alert (\"بروزرسانی گردید\");\r\n    });;\r\n  }\r\n  addCheckboxes() {\r\n    this.controllers.forEach((item, ind) => {\r\n      this.actsFormArray.push(new FormControl({ 'disp': item[\"disp\"], 'controllerId': item[\"controllerId\"], 'actions': item[\"actions\"] }));\r\n    })\r\n  }\r\n\r\n  get actsFormArray() {\r\n    return this.AccessForm.controls.acts as FormArray;\r\n  }\r\n  onCheckboxChange(e) {\r\n    if (e.target.checked) {\r\n      this.checkedArray.push(new FormControl(e.target.value));\r\n    } else {\r\n      let i: number = 0;\r\n      this.checkedArray.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          this.checkedArray.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n    }\r\n  }\r\n  cancel() {\r\n    this._router.navigate(['manager','Roles']);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZXIvcm9sZS1tYW5hZ2VyL3JvbGUtbWFuYWdlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator, MatSort } from '@angular/material';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { IRole } from './../../Shared/interfaces/IRole';\nimport { LanguageService } from './../../Shared/services/Language.service';\nimport { ManagerService } from './../../Shared/services/manager.service';\n\n@Component({\n  selector: 'app-rolemanager',\n  templateUrl: './role-manager.component.html',\n  styleUrls: ['./role-manager.component.css'],\n  providers: [ManagerService]\n})\n\nexport class RoleManagerComponent implements OnInit {\n    displayedColumns: string[] = ['index', 'name', 'description', 'UserCount',  'actions'];\n    dataSource: MatTableDataSource<IRole>;\n    public filter = '';\n    public showloader = false;\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sortAll: MatSort;\n    @ViewChild('sort1', { static: true }) sort1: MatSort;\n    @ViewChild('sort2', { static: true }) sort2: MatSort;\n\n  constructor( private _manager: ManagerService,\n    private toastrService: ToastrService,\n    private translate: TranslateService,\n    private langService: LanguageService) {\n      this.getRoles();\n\n     }\n  getRoles() {\n    this.showloader = true;\n      this._manager.getRole().subscribe(data => {\n         this.dataSource = new MatTableDataSource(<any>data);\n         this.dataSource.paginator = this.paginator;\n         this.dataSource.sort = this.sort1;\n         this.showloader = false;\n      });\n  }\n\n  ngOnInit() {\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  doDelete(elem:IRole) {\n    this.showloader = true;\n    this._manager.DeleteRole(elem.id).subscribe(x => {\n      alert(elem);\n      this.showloader = false;\n      this.getRoles();  \n    }, err => { console.log(err)});\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZXIvcm9sZWVkaXQvcm9sZWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IRole } from '../../Shared/interfaces/IRole';\r\nimport { ManagerService } from '../../Shared/services/manager.service';\r\n@Component({\r\n  selector: 'app-roleedit',\r\n  templateUrl: './roleedit.component.html',\r\n  styleUrls: ['./roleedit.component.css'],\r\n  providers: [ManagerService]\r\n})\r\nexport class RoleeditComponent implements OnInit {\r\n  roleForm: FormGroup;\r\n  formTitle = \"Create\";\r\n  breadcroumb = \"CreateRole\"\r\n  id: number;\r\n  constructor(private _fb: FormBuilder,\r\n    private _avRoute: ActivatedRoute,\r\n    private _router: Router,\r\n    private _manager: ManagerService) {\r\n    if (this._avRoute.snapshot.params['id']) {\r\n      this.id = this._avRoute.snapshot.params['id'];\r\n    }\r\n    this.roleForm = this._fb.group({\r\n      id: 0,\r\n      name: ['', [Validators.required]],\r\n      description: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.id > 0) {\r\n      this.formTitle = 'Edit';\r\n      this.breadcroumb = 'EditRole';\r\n      this._manager.getRoleById(this.id).subscribe(res => {\r\n        this.roleForm.get('name').setValue(res['name']);\r\n        this.roleForm.get('description').setValue(res['description']);\r\n      },\r\n        err => { console.log(err) });\r\n    }\r\n  }\r\n  Save() {\r\n    if (!this.roleForm.valid) {\r\n      return;\r\n    }\r\n    if (this.formTitle === 'Create') {\r\n      this._manager.AddRole(this.roleForm.value).subscribe(data => { alert(\"نقش مورد نظر ایجاد گردید\"); });      \r\n    }\r\n    else if (this.formTitle == 'Edit') {\r\n      this.roleForm.get('id').setValue(this.id); //set id \r\n      this._manager.UpdateRole(this.roleForm.value).subscribe(data => { alert(\"نقش مورد نظر ویرایش گردید\");})\r\n    }\r\n  }\r\n  \r\n  cancel() {\r\n    this._router.navigate(['manager', 'Roles']);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZXIvdXNlci1jaGFuZ2UtcGFzcy91c2VyLWNoYW5nZS1wYXNzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ManagerService } from '../../Shared/services/manager.service';\r\n\n@Component({\n  selector: 'app-user-change-pass',\n  templateUrl: './user-change-pass.component.html',\n  styleUrls: ['./user-change-pass.component.css'],\n  providers: [ManagerService]\n})\nexport class UserChangePassComponent implements OnInit {\n  formTitle = \"Change Password\";\n  passChangeForm: FormGroup;\n  id: number;\n  constructor(private _fb: FormBuilder,private _router: Router,\n    private _avRouted: ActivatedRoute, private _manager: ManagerService) {\n    if (this._avRouted.snapshot.params['id']) {\n      this.id = this._avRouted.snapshot.params['id'];\r\n    }\n    this.passChangeForm = this._fb.group({\n      id:0,\n      newPassword: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required]\r\n    });\n  }\n\n  ngOnInit() {\n  }\n  Save() {\r\n    if (!this.passChangeForm.valid) {\r\n      return;\r\n    }\r\n    this.passChangeForm.get('id').setValue(this.id);\r\n    this._manager.UpdatePassword(this.passChangeForm.value).subscribe(res => {\r\n      alert(res[\"msg\"]);\r\n      this._router.navigate(['manager']);\r\n      },\r\n      err => { console.log(err) })\r\n  }\r\n  cancel() {\r\n    this._router.navigate(['manager']);\r\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZXIvdXNlci1tYW5hZ2VyL3VzZXItbWFuYWdlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { ManagerService } from './../../Shared/services/manager.service';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { IUser } from '../../Shared/interfaces/IUser';\r\n\r\n@Component({\r\n  selector: 'app-usermanager',\r\n  templateUrl: './user-manager.component.html',\r\n  styleUrls: ['./user-manager.component.css'],\r\n  providers: [ManagerService]\r\n})\r\nexport class UserManagerComponent implements OnInit {\r\n  displayedColumns: string[] = ['index', 'FirstName', 'LastName',  'IsActive','actions'];\r\n  public filter = '';\r\n  users: any[];\r\n  showloader: boolean = false;\r\n  dataSource: MatTableDataSource<IUser>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild('sort1', { static: true }) sort1: MatSort;\r\n\r\n  constructor(private _manager: ManagerService) {\r\n    this.getUsers();\r\n  }\r\n  getUsers() {\r\n    this.showloader = true;\r\n    this._manager.getUsers().subscribe(data => {\r\n      //this.users = <any>data;\r\n      this.dataSource = new MatTableDataSource(<any>data[\"users\"]);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort1;\r\n      this.showloader = false;\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZXIvdXNlci1yb2xlcy91c2VyLXJvbGVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ManagerService } from '../../Shared/services/manager.service';\r\nimport { map } from 'rxjs/internal/operators/map';\r\n\n@Component({\n  selector: 'app-user-roles',\n  templateUrl: './user-roles.component.html',\n  styleUrls: ['./user-roles.component.css'],\n  providers: [ManagerService]\n})\nexport class UserRolesComponent implements OnInit {\n  id: number;\n  checkedArray: FormArray;\n  asignRoleForm: FormGroup;\n  constructor(private _fb: FormBuilder, private _router: Router,\n    private _avRouted: ActivatedRoute, private _manager: ManagerService) {\n    if (this._avRouted.snapshot.params['id']) {\n      this.id = this._avRouted.snapshot.params['id'];\r\n    }\n    this.asignRoleForm = this._fb.group({\n      rls:new  FormArray([])\n    });\n\n    this._manager.GetRoleAsignToUser(this.id).subscribe(\n      res => {        \n        res[\"roles\"].forEach((value, index) => {\n          this.checkedArray = new FormArray([]);\n          this.rlsFormArray.push(new\n            FormControl({\r\n              'id': value['id'],\n              'title': value['name'],\n              'selected': value['selected']\r\n            }));\n          if (value['selected'] == true) {\n            this.checkedArray.push(new\n              FormControl({\r\n                'id': value['id'],\n                'title': value['name'],\n                'selected': value['selected']\r\n              }));          }\n        });\n        return res;\n      })  \n  }\n  ngOnInit() { }\n\n  get rlsFormArray() {\r\n    return this.asignRoleForm.controls.rls as FormArray;\r\n  }\n  onCheckboxChange(e) {\r\n    if (e.target.checked) {\r\n      this.checkedArray.push(new FormControl(e.target.value));\r\n    }\r\n    else {\r\n      let i: number = 0;\r\n      this.checkedArray.controls.forEach((item: FormControl) => {\r\n        if (item.value == e.target.value) {\r\n          this.checkedArray.removeAt(i);\r\n          return;\r\n        }\r\n        i++;\r\n      });\r\n    }\r\n  }\n  cancel() {\r\n    this._router.navigate(['manager']);\r\n  }\n  submit() {\n    var dd: number[] = [];\r\n    this.checkedArray.controls.forEach((key, value) => {      \r\n      dd.push(key.value);\r\n    });\r\n    this._manager.UpdateUserRole(+this.id, dd).subscribe(data => {\r\n      alert(data[\"msg\"]);\r\n      this._router.navigate(['manager']);\r\n    });;\r\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZXIvdXNlcmVkaXQvdXNlcmVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ManagerService } from '../../Shared/services/manager.service';\r\n\r\n@Component({\r\n  selector: 'app-useredit',\r\n  templateUrl: './useredit.component.html',\r\n  styleUrls: ['./useredit.component.css'],\r\n  providers: [ManagerService]\r\n})\r\nexport class UsereditComponent implements OnInit {\r\n  usrForm: FormGroup;\r\n  formTitle = \"Create\";\r\n  breadcroumb = \"CreateRole\";\r\n  id: number;\r\n\r\n  constructor(private _fb: FormBuilder,\r\n    private _avRoute: ActivatedRoute, private _router: Router,\r\n    private _manager: ManagerService) {\r\n    if (this._avRoute.snapshot.params[\"id\"]) {\r\n      this.id = this._avRoute.snapshot.params[\"id\"];\r\n    }\r\n    this.usrForm =  this._fb.group({\r\n      id: 0,\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      userName: ['', Validators.required],\r\n      email: ['info@info.ir', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required]\r\n    });\r\n  }\r\n \r\n  ngOnInit() {\r\n    if (this.id > 0) {\r\n      this.formTitle = 'Edit';\r\n      this.breadcroumb = 'EditUser';\r\n      this._manager.getUserById(this.id).subscribe(res => {\r\n        this.usrForm.get('firstName').setValue(res['firstName']);\r\n        this.usrForm.get('lastName').setValue(res['lastName']);\r\n        this.usrForm.get('userName').setValue(res['userName']);\r\n        this.usrForm.get('email').setValue(res['email']);\r\n        //password donot show in Edit mode... \r\n        this.usrForm.get('password').setValue('noChange');\r\n        this.usrForm.get('confirmPassword').setValue('noChange');\r\n      },\r\n        err => { console.log(err) });\r\n    }\r\n  }\r\n  Save() {\r\n    if (!this.usrForm.valid) {\r\n      return;\r\n    }\r\n    if (this.formTitle === 'Create') {\r\n     \r\n      this._manager.AddUser(this.usrForm.value).subscribe(data => {        \r\n        alert(\"کاربر جدید ایجاد گردید\");\r\n      });\r\n    }\r\n    else if (this.formTitle == 'Edit') {     \r\n      this.usrForm.get('id').setValue(this.id); //set id \r\n      this._manager.UpdateUser(this.usrForm.value).subscribe(data => {\r\n        alert(\"کاربر مورد نظر ویرایش گردید\");\r\n        this._router.navigate(['manager']);\r\n      })\r\n      \r\n    }\r\n  }\r\n  cancel() {\r\n    this._router.navigate(['manager']);\r\n  }\r\n}\r\nexport function forbiddenNameValidator(nameRe: RegExp): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const forbidden = nameRe.test(control.value);\r\n    return forbidden ? { forbiddenName: { value: control.value } } : null;\r\n  };\r\n}\r\n"],"sourceRoot":""}